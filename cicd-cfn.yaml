AWSTemplateFormatVersion: 2010-09-09


Parameters : 
  ApplicationRepoName:
    Type : String 
    Description : Name of the repo 
    Default : cfn-cicd-repo 
  ArtifactStoreS3Location:
    Type: String 
    Description : Name of S3 Bucket 
    Default : 1994nestedbucket1994

Resources:
  MySNSTopic:
    Type: AWS::SNS::Topic
    Properties: 
      DisplayName: 'my sns topic'
      Subscription: 
        - Endpoint: nurahmedsabbir@gmail.com
          Protocol: email
      TopicName: 'fuckmylife'

  MyCodeCommit:
    Type: AWS::CodeCommit::Repository
    Properties: 
      RepositoryDescription: 'My stupid golang app'
      RepositoryName: !Ref ApplicationRepoName
      Triggers: 
        - DestinationArn : !Ref MySNSTopic
          Events : 
            - updateReference
          Name : 'is it working ?'

############################CloudFormation Role
  CloudFormationRole:
      Type: 'AWS::IAM::Role'
      Properties:
        RoleName : !Sub CloudFormationRole-${AWS::StackName}
        AssumeRolePolicyDocument:
          Version : '2012-10-17'
          Statement:
            - Effect : 'Allow'
              Principal : 
                Service : 
                  - 'cloudformation.amazonaws.com'
              Action : 
                - 'sts:AssumeRole'
        Path : /service-role/
        Policies : 
          - PolicyName: 'vpcFullAccess'
            PolicyDocument:
              Version: '2012-10-17'
              Statement:
              - Effect: Allow
                Action:
                - ec2:AcceptVpcPeeringConnection
                - ec2:AcceptVpcEndpointConnections
                - ec2:AllocateAddress
                - ec2:AssignIpv6Addresses
                - ec2:AssignPrivateIpAddresses
                - ec2:AssociateAddress
                - ec2:AssociateDhcpOptions
                - ec2:AssociateRouteTable
                - ec2:AssociateSubnetCidrBlock
                - ec2:AssociateVpcCidrBlock
                - ec2:AttachClassicLinkVpc
                - ec2:AttachInternetGateway
                - ec2:AttachNetworkInterface
                - ec2:AttachVpnGateway
                - ec2:AuthorizeSecurityGroupEgress
                - ec2:AuthorizeSecurityGroupIngress
                - ec2:CreateCustomerGateway
                - ec2:CreateDefaultSubnet
                - ec2:CreateDefaultVpc
                - ec2:CreateDhcpOptions
                - ec2:CreateEgressOnlyInternetGateway
                - ec2:CreateFlowLogs
                - ec2:CreateInternetGateway
                - ec2:CreateNatGateway
                - ec2:CreateNetworkAcl
                - ec2:CreateNetworkAcl
                - ec2:CreateNetworkAclEntry
                - ec2:CreateNetworkInterface
                - ec2:CreateNetworkInterfacePermission
                - ec2:CreateRoute
                - ec2:CreateRouteTable
                - ec2:CreateSecurityGroup
                - ec2:CreateSubnet
                - ec2:CreateTags
                - ec2:CreateVpc
                - ec2:CreateVpcEndpoint
                - ec2:CreateVpcEndpointConnectionNotification
                - ec2:CreateVpcEndpointServiceConfiguration
                - ec2:CreateVpcPeeringConnection
                - ec2:CreateVpnConnection
                - ec2:CreateVpnConnectionRoute
                - ec2:CreateVpnGateway
                - ec2:DeleteCustomerGateway
                - ec2:DeleteDhcpOptions
                - ec2:DeleteEgressOnlyInternetGateway
                - ec2:DeleteFlowLogs
                - ec2:DeleteInternetGateway
                - ec2:DeleteNatGateway
                - ec2:DeleteNetworkAcl
                - ec2:DeleteNetworkAclEntry
                - ec2:DeleteNetworkInterface
                - ec2:DeleteNetworkInterfacePermission
                - ec2:DeleteRoute
                - ec2:DeleteRouteTable
                - ec2:DeleteSecurityGroup
                - ec2:DeleteSubnet
                - ec2:DeleteTags
                - ec2:DeleteVpc
                - ec2:DeleteVpcEndpoints
                - ec2:DeleteVpcEndpointConnectionNotifications
                - ec2:DeleteVpcEndpointServiceConfigurations
                - ec2:DeleteVpcPeeringConnection
                - ec2:DeleteVpnConnection
                - ec2:DeleteVpnConnectionRoute
                - ec2:DeleteVpnGateway
                - ec2:DescribeAccountAttributes
                - ec2:DescribeAddresses
                - ec2:DescribeAvailabilityZones
                - ec2:DescribeClassicLinkInstances
                - ec2:DescribeCustomerGateways
                - ec2:DescribeDhcpOptions
                - ec2:DescribeEgressOnlyInternetGateways
                - ec2:DescribeFlowLogs
                - ec2:DescribeInstances
                - ec2:DescribeInternetGateways
                - ec2:DescribeKeyPairs
                - ec2:DescribeMovingAddresses
                - ec2:DescribeNatGateways
                - ec2:DescribeNetworkAcls
                - ec2:DescribeNetworkInterfaceAttribute
                - ec2:DescribeNetworkInterfacePermissions
                - ec2:DescribeNetworkInterfaces
                - ec2:DescribePrefixLists
                - ec2:DescribeRouteTables
                - ec2:DescribeSecurityGroupReferences
                - ec2:DescribeSecurityGroups
                - ec2:DescribeStaleSecurityGroups
                - ec2:DescribeSubnets
                - ec2:DescribeTags
                - ec2:DescribeVpcAttribute
                - ec2:DescribeVpcClassicLink
                - ec2:DescribeVpcClassicLinkDnsSupport
                - ec2:DescribeVpcEndpointConnectionNotifications
                - ec2:DescribeVpcEndpointConnections
                - ec2:DescribeVpcEndpoints
                - ec2:DescribeVpcEndpointServiceConfigurations
                - ec2:DescribeVpcEndpointServicePermissions
                - ec2:DescribeVpcEndpointServices
                - ec2:DescribeVpcPeeringConnections
                - ec2:DescribeVpcs
                - ec2:DescribeVpnConnections
                - ec2:DescribeVpnGateways
                - ec2:DetachClassicLinkVpc
                - ec2:DetachInternetGateway
                - ec2:DetachNetworkInterface
                - ec2:DetachVpnGateway
                - ec2:DisableVgwRoutePropagation
                - ec2:DisableVpcClassicLink
                - ec2:DisableVpcClassicLinkDnsSupport
                - ec2:DisassociateAddress
                - ec2:DisassociateRouteTable
                - ec2:DisassociateSubnetCidrBlock
                - ec2:DisassociateVpcCidrBlock
                - ec2:EnableVgwRoutePropagation
                - ec2:EnableVpcClassicLink
                - ec2:EnableVpcClassicLinkDnsSupport
                - ec2:ModifyNetworkInterfaceAttribute
                - ec2:ModifySubnetAttribute
                - ec2:ModifyVpcAttribute
                - ec2:ModifyVpcEndpoint
                - ec2:ModifyVpcEndpointConnectionNotification
                - ec2:ModifyVpcEndpointServiceConfiguration
                - ec2:ModifyVpcEndpointServicePermissions
                - ec2:ModifyVpcPeeringConnectionOptions
                - ec2:ModifyVpcTenancy
                - ec2:MoveAddressToVpc
                - ec2:RejectVpcEndpointConnections
                - ec2:RejectVpcPeeringConnection
                - ec2:ReleaseAddress
                - ec2:ReplaceNetworkAclAssociation
                - ec2:ReplaceNetworkAclEntry
                - ec2:ReplaceRoute
                - ec2:ReplaceRouteTableAssociation
                - ec2:ResetNetworkInterfaceAttribute
                - ec2:RestoreAddressToClassic
                - ec2:RevokeSecurityGroupEgress
                - ec2:RevokeSecurityGroupIngress
                - ec2:UnassignIpv6Addresses
                - ec2:UnassignPrivateIpAddresses
                - ec2:UpdateSecurityGroupRuleDescriptionsEgress
                - ec2:UpdateSecurityGroupRuleDescriptionsIngress
                Resource: "*"


###########################CodeBuild

  CodeBuildRole:
      Type: 'AWS::IAM::Role'
      Properties:
        RoleName : !Sub CodeBuildRole-${AWS::StackName}
        AssumeRolePolicyDocument:
          Version : '2012-10-17'
          Statement:
            - Effect : 'Allow'
              Principal : 
                Service : 
                  - 'codebuild.amazonaws.com'
              Action : 
                - 'sts:AssumeRole'
        Path : /
        Policies : 
          - PolicyName: 'CodeBuildCICDAccessPolicy'
            PolicyDocument:
              Version : '2012-10-17'
              Statement : 
                - Effect : 'Allow'
                  Action : 
                    - 'cloudformation:Get*'
                    - 'cloudformation:Describe*'
                    - 'cloudformation:List*'
                    - 'cloudformation:ValidateTemplate'
                  Resource : '*'

                - Effect : 'Allow'
                  Action : 
                    - 'codecommit:GitPull'
                  Resource : !Sub 'arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${ApplicationRepoName}'
                - Effect : 'Allow'
                  Action : 
                    - 'logs:CreateLogGroup'
                    - 'logs:PutLogEvents'
                    - 'logs:CreateLogStream'
                  Resource : !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/codebuild/*'
                  
                - Effect : 'Allow'
                  Action : 
                    - 's3:PutObject'
                    - 's3:GetObject'
                    - 's3:GetObjectVersion'
                    - 's3:ListBucket'
                  Resource :
                    - !Sub 'arn:aws:s3:::codepipeline-${AWS::Region}-*'
                    - !Sub 'arn:aws:s3:::${ArtifactStoreS3Location}/*'
                    - !Sub 'arn:aws:s3:::${ArtifactStoreS3Location}'


  cloudformationBuildProject:
      DependsOn: MyCodeCommit
      Type : AWS::CodeBuild::Project 
      Properties : 
        Name : !Sub CFNProject-${AWS::StackName}
        Description: Check if cfn template is okay 
        ServiceRole: !GetAtt [CodeBuildRole,Arn]
        Artifacts : 
          Type : S3 
          Location : !Ref ArtifactStoreS3Location
          Name : !Sub CFNProject-${AWS::StackName}
        Environment:
          Type: LINUX_CONTAINER 
          ComputeType : BUILD_GENERAL1_SMALL
          Image : aws/codebuild/standard:4.0
        Source:
          Location: !Sub https://git-codecommit.{AWS::REGION}.amazonaws.com/v1/repos/{ApplicationRepoName}
          Type : CODECOMMIT 
        TimeoutInMinutes : 15 
        Tags:
          - Key : Name 
            Value : !Sub CFNProject-${AWS::StackName}



###########################CodePipeLine
  CodepipelineRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName : !Sub CodePipelineRole-${AWS::StackName}
      AssumeRolePolicyDocument:
        Version : '2012-10-17'
        Statement:
          - Effect : 'Allow'
            Principal : 
              Service : 
                - 'codepipeline.amazonaws.com'
            Action : 
              - 'sts:AssumeRole'
      Path : /service-role/
      Policies : 
        - PolicyName: 'CodePipelineCICDAccessPolicy'
          PolicyDocument:
            Version : '2012-10-17'
            Statement : 
              - Effect: 'Allow'
                Action:
                  - 's3:DeleteObject'
                  - 's3:GetObject'
                  - 's3:GetObjectVersion'
                  - 's3:ListBucket'
                  - 's3:PutObject'
                  - 's3:GetBucketPolicy'
                Resource: 
                  - !Sub arn:aws:s3:::${ArtifactStoreS3Location}
                  - !Sub arn:aws:s3:::${ArtifactStoreS3Location}/*
              - Effect : 'Allow'
                Action:
                  - 'sns:Publish'
                Resource: '*'
              - Effect : 'Allow'
                Action: 
                  - 'codecommit:ListBranches'
                  - 'codecommit:ListRepositories'
                  - 'codecommit:BatchGetRepositories'
                  - 'codecommit:Get*'
                  - 'codecommit:GitPull'
                  - 'codecommit:UploadArchive'
                Resource:
                  - !Sub arn:aws:codecommit:${AWS::Region}:${AWS::AccountId}:${ApplicationRepoName} 
              - Effect: 'Allow'
                Action : 
                  - 'codebuild:StartBuild'
                  - 'codebuild:BatchGetBuilds'
                Resource:
                  - !Sub arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:project/CFNProject-${AWS::StackName}
                  - !Sub arn:aws:codebuild:${AWS::Region}:${AWS::AccountId}:build/CFNProject-${AWS::StackName}
              - Effect: 'Allow'
                Action : 
                  - 'cloudformation:CreateStack'
                  - 'cloudformation:DeleteStack'
                  - 'cloudformation:UpdateStack'
                  - 'cloudformation:ExecuteChangeSet'
                  - 'cloudformation:CreateChangeSet'
                  - 'cloudformation:List*'
                  - 'cloudformation:ValidateTemplate'
                  - 'cloudformation:Describe*'
                Resource: '*'
              - Effect : 'Allow'
                Action : 
                  - 'iam:PassRole'
                Resource : !Sub arn:aws:iam::${AWS::AccountId}:role/service-role/CloudFormationRole-${AWS::StackName}
                #arn:aws:iam::662140372211:role/service-role/CloudFormationRole-IDONTKNOWWHATTOFEEL




  DeployPipeline:
    Type: AWS::CodePipeline::Pipeline 
    Properties:
      Name : !Sub CICDPipeline-${AWS::StackName}
      RoleArn: !GetAtt [CodepipelineRole,Arn]
      ArtifactStore : 
        Type : S3 
        Location: !Ref ArtifactStoreS3Location
      Stages:
        - Name : Source 
          Actions:
            - Name: ApplicationSource 
              ActionTypeId: 
                Category: Source 
                Owner : AWS 
                Version : 1
                Provider : CodeCommit 
              OutputArtifacts:
                - Name : ApplicationOutput 
              Configuration : 
                BranchName : master 
                RepositoryName : !Ref ApplicationRepoName 
              RunOrder : 1 
        - Name : Build
          Actions:
            - Name : CodeBuild 
              InputArtifacts :
                - Name :  ApplicationOutput 
              ActionTypeId : 
                Category : Build 
                Owner : AWS 
                Version : 1 
                Provider : CodeBuild 
              OutputArtifacts : 
                - Name : CFNArtifact 
              Configuration : 
                ProjectName : !Ref cloudformationBuildProject
              RunOrder : 1
        - Name : DeployToStaging
          Actions: 
            - Name: CFNDeploy 
              InputArtifacts:
                - Name : CFNArtifact 
              ActionTypeId:
                Category : Deploy 
                Owner : AWS 
                Version : 1 
                Provider: CloudFormation
              OutputArtifacts : 
                - Name : CreatedStack 
              Configuration: 
                ActionMode: CREATE_UPDATE
                RoleArn: !GetAtt [CloudFormationRole,Arn]
                Capabilities : CAPABILITY_NAMED_IAM
                StackName: !Sub CFNPractice${AWS::StackName}
                TemplateConfiguration: CFNArtifact::vpc-config.json
                TemplatePath : CFNArtifact::vpc.yaml
              RunOrder : 1 
